{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\elijahkane\\\\Desktop\\\\Expo\\\\Diyhub\\\\screens\\\\garage.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { SearchBar, CheckBox } from \"react-native-elements\";\nimport styles from \"../static/style\";\nimport { primaryColor } from \"../static/style\";\nimport Accordion from 'react-native-collapsible/Accordion';\nvar SECTIONS = [{\n  title: 'General',\n  parts: ['Part 1', 'Part 2', 'Part 3']\n}, {\n  title: 'Circuits',\n  parts: ['Part 4']\n}];\n\nvar Garage = function (_Component) {\n  _inherits(Garage, _Component);\n\n  var _super = _createSuper(Garage);\n\n  function Garage() {\n    var _this;\n\n    _classCallCheck(this, Garage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      activeSections: [],\n      search: '',\n      checked: false\n    };\n\n    _this.handleOnPress = function () {\n      return _this.setState({\n        checked: !_this.state.checked\n      });\n    };\n\n    _this.updateSearch = function (search) {\n      _this.setState({\n        search: search\n      });\n    };\n\n    _this._renderHeader = function (section) {\n      return React.createElement(View, {\n        style: styles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.headerText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, section.title));\n    };\n\n    _this._renderContent = function (section) {\n      return React.createElement(View, {\n        style: styles.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, React.createElement(CheckBox, {\n        checked: _this.state.checked,\n        title: section.parts[0],\n        checkedColor: primaryColor,\n        iconType: \"font-awesome-5\",\n        checkedIcon: \"check-square\",\n        uncheckedIcon: \"square\",\n        onPress: function onPress() {\n          return _this.setState({\n            checked: !_this.state.checked\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }));\n    };\n\n    _this._updateSections = function (activeSections) {\n      _this.setState({\n        activeSections: activeSections\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Garage, [{\n    key: \"render\",\n    value: function render() {\n      var search = this.state.search;\n      return React.createElement(View, {\n        style: styles.screen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, React.createElement(SearchBar, {\n        icon: {\n          type: 'font-awesome',\n          name: 'search'\n        },\n        placeholder: \"Search for Parts...\",\n        style: styles.searchBar,\n        onChangeText: this.updateSearch,\n        value: search,\n        lightTheme: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }), React.createElement(Accordion, {\n        sections: SECTIONS,\n        activeSections: this.state.activeSections,\n        renderHeader: this._renderHeader,\n        renderContent: this._renderContent,\n        onChange: this._updateSections,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      }));\n    }\n  }]);\n\n  return Garage;\n}(Component);\n\nexport { Garage as default };","map":{"version":3,"sources":["C:/Users/elijahkane/Desktop/Expo/Diyhub/screens/garage.js"],"names":["React","Component","SearchBar","CheckBox","styles","primaryColor","Accordion","SECTIONS","title","parts","Garage","state","activeSections","search","checked","handleOnPress","setState","updateSearch","_renderHeader","section","header","headerText","_renderContent","content","_updateSections","screen","type","name","searchBar"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Text, View} from \"react-native\";\r\nimport {SearchBar, CheckBox} from \"react-native-elements\";\r\nimport styles from '../static/style'\r\nimport {primaryColor} from \"../static/style\";\r\nimport Accordion from 'react-native-collapsible/Accordion';\r\n\r\nconst SECTIONS = [\r\n    {\r\n      title: 'General',\r\n        parts: ['Part 1', 'Part 2', 'Part 3'],\r\n    },\r\n    {\r\n      title: 'Circuits',\r\n        parts: ['Part 4'],\r\n    },\r\n  ];\r\n\r\n\r\n\r\n\r\nexport default class Garage extends Component{\r\n\r\n    state = {\r\n        activeSections: [],\r\n        search: '',\r\n        checked: false,\r\n      };\r\n\r\n    handleOnPress = () => this.setState({checked: !this.state.checked})\r\n\r\n\r\n    updateSearch = (search) => {\r\n        this.setState({ search });\r\n    };\r\n\r\n      _renderHeader = section => {\r\n        return (\r\n          <View style={styles.header}>\r\n            <Text style={styles.headerText}>{section.title}</Text>\r\n          </View>\r\n        );\r\n      };\r\n\r\n      _renderContent = section => {\r\n        return (\r\n          <View style={styles.content}>\r\n            <CheckBox\r\n                checked={this.state.checked}\r\n                title={section.parts[0]}\r\n                checkedColor={primaryColor}\r\n                iconType='font-awesome-5'\r\n                checkedIcon='check-square'\r\n                uncheckedIcon='square'\r\n                onPress={() => this.setState({checked: !this.state.checked})}\r\n            />\r\n          </View>\r\n        );\r\n      };\r\n\r\n      _updateSections = activeSections => {\r\n        this.setState({ activeSections });\r\n      };\r\n\r\n        render() {\r\n            const { search } = this.state;\r\n            return (\r\n                <View style={styles.screen}>\r\n                    <SearchBar\r\n                        icon={{ type: 'font-awesome', name: 'search' }}\r\n                        // onChangeText={}\r\n                        // onClearText={}\r\n                        placeholder='Search for Parts...'\r\n                        style={styles.searchBar}\r\n                        onChangeText={this.updateSearch}\r\n                        value={search}\r\n                        lightTheme={true}\r\n                    />\r\n                    <Accordion\r\n                    sections = {\r\n                        SECTIONS\r\n                    }\r\n                    activeSections = {\r\n                        this.state.activeSections\r\n                    }\r\n                    renderHeader = {\r\n                        this._renderHeader\r\n                    }\r\n                    renderContent = {\r\n                        this._renderContent\r\n                    }\r\n                    onChange = {\r\n                        this._updateSections\r\n                    }\r\n                    />\r\n                </View>\r\n            );\r\n        }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}